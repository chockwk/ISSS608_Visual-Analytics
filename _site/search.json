[
  {
    "objectID": "ISSS608_Visual Analytics.html",
    "href": "ISSS608_Visual Analytics.html",
    "title": "Visual Analytics",
    "section": "",
    "text": "Welcome to my home page on Visual Analytics!\nThis page documents my learning journey of visual analytics taught by Prof Kam Tin Seong.\nThe learning objective is to understand the basic concepts, theories and methodologies of visual analytics, analyse data using appropriate visual thinking and visual analytics techniques, and implement cutting-edge visual analytics system for decision making."
  },
  {
    "objectID": "ISSS608_Visual Analytics.html#overview",
    "href": "ISSS608_Visual Analytics.html#overview",
    "title": "Visual Analytics",
    "section": "Overview",
    "text": "Overview"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications, Spring 2024 class!\nThis page documents my learning journey of geospatial analytics taught by Prof Kam Tin Seong.\n\nSource: Autodesk\nThis is the Datasaurus Dozen. While different in appearance, each dataset has the same summary statistics (mean, standard deviation, and Pearson’s correlation) to two decimal places.\n\n\nWhat is Visual Analytics?\nVisual Analytics is the craft of analytical reasoning supported by: - Data Science and Analytics - Data Visualisation - Human-Computing-Interaction (HCI) - Interface Design - Visual Storytelling\nThe learning objective is to understand the basic concepts, theories and methodologies of visual analytics, analyse data using appropriate visual thinking and visual analytics techniques, and implement cutting-edge visual analytics system for decision making.\n\n\n\nPosts\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nCommon Statistical Data Formats\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nCreating data visualisation beyond default\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nExtensions of ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nJan 9, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nFundamentals of ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nInteractive Data Visualization\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html",
    "href": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html",
    "title": "1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "1 Learning Objectives\n\nBasic principles and essential components of ggplot2\nPlot statistical graphics based on the principle of Layered Grammar of Graphics\n\n\n\n2. Load Package\n\npacman::p_load(tidyverse)\n\nggplot2 is a R package dedicated to data visualization. It can greatly improve the quality and aesthetics of graphics. ggplot2 builds charts through layers using geom_ functions.\n\ngeom_bargeom_bingeom_boxplotgeom_densitygeom_errorgeom_hexgeom_histgeom_hlinegeom_jittergeom_labelgeom_linegeom_pointgeom_polygongeom_rectgeom_ribbongeom_ruggeom_segmentgeom_smoothgeom_textgeom_titlegeom_violingeom_vline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3. Load Data\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\n\n\n4, Explore Data\n\nCLASSGENDERRACEENGLISH\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html#cheatsheet",
    "href": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html#cheatsheet",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\ngeom_bargeom_bingeom_boxplotgeom_densitygeom_errorgeom_hexgeom_histgeom_hlinegeom_jittergeom_labelgeom_linegeom_pointgeom_polygongeom_rectgeom_ribbongeom_ruggeom_segmentgeom_smoothgeom_textgeom_titlegeom_violingeom_vline"
  },
  {
    "objectID": "Topics/HO1/HO1.html#cheatsheet",
    "href": "Topics/HO1/HO1.html#cheatsheet",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Cheatsheet",
    "text": "Cheatsheet"
  },
  {
    "objectID": "Topics/HO1/HO1.html#class",
    "href": "Topics/HO1/HO1.html#class",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Class",
    "text": "Class\n\ngeom_bar\n\n\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#gender",
    "href": "Topics/HO1/HO1.html#gender",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Gender",
    "text": "Gender\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#race",
    "href": "Topics/HO1/HO1.html#race",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Race",
    "text": "Race\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#english",
    "href": "Topics/HO1/HO1.html#english",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "ENGLISH",
    "text": "ENGLISH"
  },
  {
    "objectID": "Topics/HO1/HO1.html#score-english-maths-science",
    "href": "Topics/HO1/HO1.html#score-english-maths-science",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Score (English, Maths, Science)",
    "text": "Score (English, Maths, Science)\n\ngeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nAlert:\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: The performance of students between Female and Male is observed to be similar across all scores.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: Majority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nRequiries x and y input\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#geom_boxplot",
    "href": "Topics/HO1/HO1.html#geom_boxplot",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "geom_boxplot",
    "text": "geom_boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#statistic-summary",
    "href": "Topics/HO1/HO1.html#statistic-summary",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Statistic Summary",
    "text": "Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#facets",
    "href": "Topics/HO1/HO1.html#facets",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Facets",
    "text": "Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#ggplot2-cheatsheet",
    "href": "Topics/HO1/HO1.html#ggplot2-cheatsheet",
    "title": "Fundamentals of ggplot2",
    "section": "ggplot2 Cheatsheet",
    "text": "ggplot2 Cheatsheet"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-1-to-4-creating-various-ggplot",
    "href": "Topics/HO1/HO1.html#step-1-to-4-creating-various-ggplot",
    "title": "Fundamentals of ggplot2",
    "section": "Step 1 to 4: Creating various ggplot",
    "text": "Step 1 to 4: Creating various ggplot\n\ngeom_barcoord_polargeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\nA barplot is used to display the relationship between a numeric and a categorical variable.\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nA piechart is a circle divided into sectors that each represent a proportion of the whole. There is no specific geom to build piechart with ggplot2. The trick is to build a barplot and use coord_polar to make it circular. In the case of pie chart, the pie() function of Base R is a better alternative.\n\nggplot(exam_data, aes(x = CLASS)) +\n  geom_bar() +\n  coord_polar()+\n  labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nAlert:\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: The performance of students between Female and Male is observed to be similar across all scores.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: Majority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nRequiries x and y input\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-5-scale",
    "href": "Topics/HO1/HO1.html#step-5-scale",
    "title": "Fundamentals of ggplot2",
    "section": "Step 5: Scale",
    "text": "Step 5: Scale"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-6-statistic-summary",
    "href": "Topics/HO1/HO1.html#step-6-statistic-summary",
    "title": "Fundamentals of ggplot2",
    "section": "Step 6: Statistic Summary",
    "text": "Step 6: Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-7-facets",
    "href": "Topics/HO1/HO1.html#step-7-facets",
    "title": "Fundamentals of ggplot2",
    "section": "Step 7: Facets",
    "text": "Step 7: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths_Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-8-coordinates",
    "href": "Topics/HO1/HO1.html#step-8-coordinates",
    "title": "Fundamentals of ggplot2",
    "section": "Step 8: Coordinates",
    "text": "Step 8: Coordinates"
  },
  {
    "objectID": "Topics/HO2/HO2.html",
    "href": "Topics/HO2/HO2.html",
    "title": "Extensions of ggplot2",
    "section": "",
    "text": "1 Learning Objectives\n\nAnnotate or label data using ggrepel package\nCreate publication quality figure by using ggthemes and hrbrthemes packages\nPlot composite figure to combine ggplot2 graphs using patchwork package\n\n\n\n2 Load Packages\nBeside tidyverse, the following R packages will be used:\n\nggrepel provides geoms to repel overlapping text labels\nggthemes provides themes, geoms, and scales\nhrbrthemes provides typography-centric themes and theme components\npatchwork prepares composite figures\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse) \n\n\n\n3 Import Data\nexam_data is a year end examination grades of a cohort of Primary 3 students from a local school.\nThe output shows a total of seven attributes; four of them are categorical attributes (ID, CLASS, GENDER and RACE) and the other three are continuous attributes (MATHS, ENGLISH and SCIENCE).\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n4 Annotate Data using ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text.\nWe replace geom_text() by geom_text_repel() geom_label() by geom_label_repel()\n\nggplotggrepel\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = 0.5, \n             vjust = -0.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              size = 0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot (ggrepel)\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nggrepel 318 unlabeled data points (too many overlaps). Consider increasing max.overlaps\n\n\n\n\n\n\n\n5 Customize Plot Themes\n\nggplotggthemehrbthems\n\n\nggplot2 comes with eight built-in themes, namely theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme_economist()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\nThemes:\n\ntheme_ft_rc()\ntheme_ipsum()\ntheme_ipsum_ps()\ntheme_ipsum_rc()\ntheme_ipsum_tw()\ntheme_modern_rc()\n\ntheme_ipsum() where ‘ipsum’ is Latin for ’precise.\n\n\n\n\n\n\nWarning\n\n\n\nError in theme_ipsum() : could not find function “theme_ipsum”\nEither Arial Narrow or Roboto Condensed fonts are required to use these themes.\nPlease use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\nWhy Arial Narrow?\nArial Narrow is generally installed by default or readily available on any modern system. Also, it is a condensed font with solid default kerning pairs and geometric numbers.\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\",\n                 fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18, base_size argument is used to increase the default axis label to 15, and grid argument is used to remove the x-axis grid lines.\n\n\n\n\n\n6 Create Composite Graphics\n\npatchwork (multiple graphs)gridExtra (multiple graphs)patchwork (insert)\n\n\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n“+” operator creates a horizontal layout. “()” create a subplot group. “|” operator to stack two ggplot2 graphs, “/” operator to place the plots beside each other, “()” operator the define the sequence of the plotting.\n\nmaths &lt;- ggplot(data = exam_data,\n                aes(x = MATHS, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nenglish &lt;- ggplot(data = exam_data,\n                aes(x = ENGLISH, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"English Score Distribution\", x = \"English Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nscience &lt;- ggplot(data = exam_data,\n                aes(x = SCIENCE, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Science Score Distribution\", x = \"Science Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nenglish + maths + science\n\n\n\n\n\n(english + maths) / science\n\n\n\n\n\n\n\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\ngrid.arrange(english, maths, science, ncol = 2)\n\n\n\n\n\n\n\nmain &lt;- ggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              size = 0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nmain + \n  inset_element(maths, left = 0.02, bottom = 0.7, right = 0.4, top = 1) +\n  inset_element(english, left = 0.4, bottom = 0.7, right = 0.8, top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nplot &lt;- (english / maths) | main\nplot & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 320 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n7 References\n\nhrbrthemes: https://hrbrmstr.github.io/hrbrthemes/"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-1-to-4-creating-various-ggplot",
    "href": "Topics/HO1/HO1.html#layer-1-to-4-creating-various-ggplot",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 1 to 4: Creating various ggplot",
    "text": "Layer 1 to 4: Creating various ggplot\n\ngeom_barcoord_polargeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\nA barplot is used to display the relationship between a numeric and a categorical variable.\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nA pie chart is a circle divided into sectors that each represent a proportion of the whole. There is no specific geom to build piechart with ggplot2. The trick is to build a barplot and use coord_polar to make it circular.\n\nggplot(exam_data, aes(x = CLASS)) +\n  geom_bar() +\n  coord_polar()+\n  labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn the case of pie chart, the pie() function of Base R is a better alternative.\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nAttention\n\n\n\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\n\n\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: stat_bin() using bins = 10.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nThe performance of students between Female and Male is observed to be similar across all scores.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nMajority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nx or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\ngeom_violin requiries x and y input.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-5-scale",
    "href": "Topics/HO1/HO1.html#layer-5-scale",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 5: Scale",
    "text": "Layer 5: Scale\nscale_colour_brewer() and scale_fill_brewer() provide sequential, diverging and qualitative colour schemes from ColorBrewer and particularly well suited to display discrete values on a map.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  scale_fill_brewer(palette = \"Blues\")\n\n\n\n\n?scales::brewer_pal for more details"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-6-statistic-summary",
    "href": "Topics/HO1/HO1.html#layer-6-statistic-summary",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 6: Statistic Summary",
    "text": "Layer 6: Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-7-facets",
    "href": "Topics/HO1/HO1.html#layer-7-facets",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 7: Facets",
    "text": "Layer 7: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths_Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-8-coordinates",
    "href": "Topics/HO1/HO1.html#layer-8-coordinates",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 8: Coordinates",
    "text": "Layer 8: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot.\n\ncoord_cartesiancoord_flipcoord_fixedcoord_quickmap\n\n\ncoord_cartesian() limits on the coordinate system and performs a visual zoom.\nUsage: coord_cartesian(xlim = NULL, ylim = NULL, expand = TRUE, default = FALSE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_cartesian(xlim = c(80,100), ylim = c(80,100))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\ncoord_flip() flips the horizontal bar chart into vertical bar chart.\nUsage: coord_flip(xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_flip()\n\n\n\n\n\n\ncoord_fixed is a fixed scale coordinate system forces a specified ratio between the physical representation of data units on the axes. The ratio represents the number of units on the y-axis equivalent to one unit on the x-axis.\nUsage: coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_fixed(ratio = 5)\n\n\n\n\n\n\ncoord_quickmap() is a quick approximation that does preserve straight lines.\nUseage: coord_quickmap(xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\n\n\n\n\n\nNote\n\n\n\nThe package “mapproj” is required for coord_map()\ncoord_map() projects a portion of the earth, which is approximately spherical, onto a flat 2D plane using any projection defined by the mapproj package. Map projections do not, in general, preserve straight lines, so this requires considerable computation.\nBoth coord_map() and coord_quickmap() are superseded by coord_sf().\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_map()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "Exercises/TH1/TH1.html",
    "href": "Exercises/TH1/TH1.html",
    "title": "Creating data visualisation beyond default",
    "section": "",
    "text": "1 Learning Objectives\n\nBackgroundTask\n\n\nOECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) Furthermore, several Singapore’s Minister for Education also started an “every school a good school” slogan. The general public, however, strongly belief that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families.\n\n\nThe 2022 Programme for International Student Assessment (PISA) data was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\nIn this take-home exercise, you are required to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\n\n\n\n\n\n2 Load Package\n\n\n3 Import Data\nThe PISA 2022 dataset with the full set of responses from individual students, school principals, teachers and parents. The master questionnaires administered to students who sat the computer-based assessment; each country translated these questionnaires into their own language(s).\nSource: PISA 2022 (data) and PISA 2022 Results Volume 1 (guide)"
  },
  {
    "objectID": "Topics/IC1/IC1.html",
    "href": "Topics/IC1/IC1.html",
    "title": "Common Statistical Data Formats",
    "section": "",
    "text": "✿ 1 Learning Objectives\n\nLoad common statistical data formats using haven package\nManage large dataset using .gitignore file and #| eval: false\n\n\n\n✿ 2 Load Packages\nThe following packages will be used in this topic:\n\ntidyverse is a family of R packages designed to support data science, analysis and communication task including creating static statistical graphs\nhaven import common statistical formats into R via the embedded ‘ReadStat’ C library\n\n\npacman::p_load(tidyverse, haven)\n\n\n\n✿ 3 Import Data\nPISA 2022\nread_sas() imports the PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/STU_QQQ_SAS/cy08msp_stu_qqq.sas7bdat\")\n\n\n\n\n\n\n\nNote\n\n\n\nGithub not more than 100 MB. Add text, data/, into the .gitignore file.\n\n\nThe output shows 613,744 observations with 1,279 variables. The tibble dataframe contains descriptions, unavailable in read.sas().\nWe will filter country code 3-character (CNT) for SGP to obtain Singapore results.\n\nstu_qqq_SGP &lt;- stu_qqq %&gt;% \n  filter(CNT == \"SGP\")\n\nThe output shows 6,606 observations with 1,279 variables.\n\n\n\n\n\n\nSave Point\n\n\n\n\n\n\nwrite_rds(stu_qqq_SGP, \"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\n\n\n\n\nLoad Point\n\n\n\n\n\n\nstu_qqq_SGP &lt;-read_rds(\"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\nReference\nHaven: https://haven.tidyverse.org/index.html"
  },
  {
    "objectID": "Topics/HO3/HO3.html",
    "href": "Topics/HO3/HO3.html",
    "title": "Interactive Data Visualization",
    "section": "",
    "text": "Create interactive data visualization using ggiraph and plotlyr"
  },
  {
    "objectID": "Topics/HO3/HO3.html#ggiraph",
    "href": "Topics/HO3/HO3.html#ggiraph",
    "title": "Interactive Data Visualization",
    "section": "ggiraph",
    "text": "ggiraph\nggiraph is is a tool that allows you to create dynamic ggplot graphs. It allows the addition of tooltips, hover effects and JavaScript actions to the graphics. The package also allows the selection of graphical elements when used in shiny applications.\nggiraph is an htmlwidget and a ggplot2 extension. The graphs are exported as SVG documents and special attributes are used on various elements.\n\n\n\n\n\n\nNote\n\n\n\nThe htmlwidgets package provides a framework for creating R bindings to JavaScript libraries. HTML Widgets can be: (1) used at the R console for data analysis just like conventional R plots, (2) embedded within R Markdown documents, (3) ncorporated into Shiny web applications.\n\n\nInteractive is made with ggplot geometries, legends and theme elements with three aesthetics:\n\ntooltip: Tooltips to be displayed when mouse is over elements\nonclick: JavaScript function to be executed when elements are clicked\ndata_id: ID associated with elements for hover and click actions\n\nUsage:\n\nProvide at least one of the aesthetics tooltip, data_id and onclick to create interactive elements.\nCall function girafe() with the ggplot object so that the graphic is translated as a web interactive graphics.\n\n\n\n\n\n\n\nNote\n\n\n\nWe can replace geom_point() by geom_point_interactive() geom_sf() by geom_sf_interactive()\n\n\n\ntooltiponclickdata_id\n\n\n\nplot1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot1,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  }
]