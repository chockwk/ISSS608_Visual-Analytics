[
  {
    "objectID": "ISSS608_Visual Analytics.html",
    "href": "ISSS608_Visual Analytics.html",
    "title": "Visual Analytics",
    "section": "",
    "text": "Welcome to my home page on Visual Analytics!\nThis page documents my learning journey of visual analytics taught by Prof Kam Tin Seong.\nThe learning objective is to understand the basic concepts, theories and methodologies of visual analytics, analyse data using appropriate visual thinking and visual analytics techniques, and implement cutting-edge visual analytics system for decision making."
  },
  {
    "objectID": "ISSS608_Visual Analytics.html#overview",
    "href": "ISSS608_Visual Analytics.html#overview",
    "title": "Visual Analytics",
    "section": "Overview",
    "text": "Overview"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications, Spring 2024 class!\nThis page documents my learning journey of geospatial analytics taught by Prof Kam Tin Seong.\n\nSource: Autodesk\nThis is the Datasaurus Dozen. While different in appearance, each dataset has the same summary statistics (mean, standard deviation, and Pearson’s correlation) to two decimal places.\n\n\nVisual Analytics?\nVisual Analytics is the craft of analytical reasoning supported by: - Data Science and Analytics - Data Visualisation - Human-Computing-Interaction (HCI) - Interface Design - Visual Storytelling\nThe learning objective is to understand the basic concepts, theories and methodologies of visual analytics, analyse data using appropriate visual thinking and visual analytics techniques, and implement cutting-edge visual analytics system for decision making.\n\n\n\nTopic Overview\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nExtensions of ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nJan 9, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nFundamentals of ggplot2\n\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nImport of Statistical Data Formats\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nInteractive Data Visualization\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\n  \n\n\n\n\nOECD PISA Global Education\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\nWan Kee\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html",
    "href": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html",
    "title": "1 A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "1 Learning Objectives\n\nBasic principles and essential components of ggplot2\nPlot statistical graphics based on the principle of Layered Grammar of Graphics\n\n\n\n2. Load Package\n\npacman::p_load(tidyverse)\n\nggplot2 is a R package dedicated to data visualization. It can greatly improve the quality and aesthetics of graphics. ggplot2 builds charts through layers using geom_ functions.\n\ngeom_bargeom_bingeom_boxplotgeom_densitygeom_errorgeom_hexgeom_histgeom_hlinegeom_jittergeom_labelgeom_linegeom_pointgeom_polygongeom_rectgeom_ribbongeom_ruggeom_segmentgeom_smoothgeom_textgeom_titlegeom_violingeom_vline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3. Load Data\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\n\n\n4, Explore Data\n\nCLASSGENDERRACEENGLISH\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightblue\")+\n  labs(title = \"Number of Students\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html#cheatsheet",
    "href": "Topics/A_Introduction to ggplot2/HO1_Introduction to ggplot2.html#cheatsheet",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Cheatsheet",
    "text": "Cheatsheet\n\n\n\n\n\n\ngeom_bargeom_bingeom_boxplotgeom_densitygeom_errorgeom_hexgeom_histgeom_hlinegeom_jittergeom_labelgeom_linegeom_pointgeom_polygongeom_rectgeom_ribbongeom_ruggeom_segmentgeom_smoothgeom_textgeom_titlegeom_violingeom_vline"
  },
  {
    "objectID": "Topics/HO1/HO1.html#cheatsheet",
    "href": "Topics/HO1/HO1.html#cheatsheet",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Cheatsheet",
    "text": "Cheatsheet"
  },
  {
    "objectID": "Topics/HO1/HO1.html#class",
    "href": "Topics/HO1/HO1.html#class",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Class",
    "text": "Class\n\ngeom_bar\n\n\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#gender",
    "href": "Topics/HO1/HO1.html#gender",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Gender",
    "text": "Gender\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#race",
    "href": "Topics/HO1/HO1.html#race",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Race",
    "text": "Race\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#english",
    "href": "Topics/HO1/HO1.html#english",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "ENGLISH",
    "text": "ENGLISH"
  },
  {
    "objectID": "Topics/HO1/HO1.html#score-english-maths-science",
    "href": "Topics/HO1/HO1.html#score-english-maths-science",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Score (English, Maths, Science)",
    "text": "Score (English, Maths, Science)\n\ngeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nAlert:\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: The performance of students between Female and Male is observed to be similar across all scores.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: Majority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nRequiries x and y input\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#geom_boxplot",
    "href": "Topics/HO1/HO1.html#geom_boxplot",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "geom_boxplot",
    "text": "geom_boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#statistic-summary",
    "href": "Topics/HO1/HO1.html#statistic-summary",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Statistic Summary",
    "text": "Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#facets",
    "href": "Topics/HO1/HO1.html#facets",
    "title": "1 Layered Grammar of Graphics: ggplot2 methods",
    "section": "Facets",
    "text": "Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#ggplot2-cheatsheet",
    "href": "Topics/HO1/HO1.html#ggplot2-cheatsheet",
    "title": "Fundamentals of ggplot2",
    "section": "ggplot2 Cheatsheet",
    "text": "ggplot2 Cheatsheet"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-1-to-4-creating-various-ggplot",
    "href": "Topics/HO1/HO1.html#step-1-to-4-creating-various-ggplot",
    "title": "Fundamentals of ggplot2",
    "section": "Step 1 to 4: Creating various ggplot",
    "text": "Step 1 to 4: Creating various ggplot\n\ngeom_barcoord_polargeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\nA barplot is used to display the relationship between a numeric and a categorical variable.\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nA piechart is a circle divided into sectors that each represent a proportion of the whole. There is no specific geom to build piechart with ggplot2. The trick is to build a barplot and use coord_polar to make it circular. In the case of pie chart, the pie() function of Base R is a better alternative.\n\nggplot(exam_data, aes(x = CLASS)) +\n  geom_bar() +\n  coord_polar()+\n  labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nAlert:\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: The performance of students between Female and Male is observed to be similar across all scores.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nInsight: Majority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\nNote: x or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nRequiries x and y input\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-5-scale",
    "href": "Topics/HO1/HO1.html#step-5-scale",
    "title": "Fundamentals of ggplot2",
    "section": "Step 5: Scale",
    "text": "Step 5: Scale"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-6-statistic-summary",
    "href": "Topics/HO1/HO1.html#step-6-statistic-summary",
    "title": "Fundamentals of ggplot2",
    "section": "Step 6: Statistic Summary",
    "text": "Step 6: Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-7-facets",
    "href": "Topics/HO1/HO1.html#step-7-facets",
    "title": "Fundamentals of ggplot2",
    "section": "Step 7: Facets",
    "text": "Step 7: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths_Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#step-8-coordinates",
    "href": "Topics/HO1/HO1.html#step-8-coordinates",
    "title": "Fundamentals of ggplot2",
    "section": "Step 8: Coordinates",
    "text": "Step 8: Coordinates"
  },
  {
    "objectID": "Topics/HO2/HO2.html",
    "href": "Topics/HO2/HO2.html",
    "title": "Extensions of ggplot2",
    "section": "",
    "text": "1 Learning Objectives\n\nAnnotate or label data using ggrepel package\nCreate publication quality figure by using ggthemes and hrbrthemes packages\nPlot composite figure to combine ggplot2 graphs using patchwork package\n\n\n\n2 Load Packages\nBeside tidyverse, the following R packages will be used:\n\nggrepel provides geoms to repel overlapping text labels\nggthemes provides themes, geoms, and scales\nhrbrthemes provides typography-centric themes and theme components\npatchwork prepares composite figures\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse) \n\n\n\n3 Import Data\nexam_data is a year end examination grades of a cohort of Primary 3 students from a local school.\nThe output shows a total of seven attributes; four of them are categorical attributes (ID, CLASS, GENDER and RACE) and the other three are continuous attributes (MATHS, ENGLISH and SCIENCE).\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n4 Annotate Data using ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text.\nWe replace geom_text() by geom_text_repel() geom_label() by geom_label_repel()\n\nggplotggrepel\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = 0.5, \n             vjust = -0.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              size = 0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot (ggrepel)\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nggrepel 318 unlabeled data points (too many overlaps). Consider increasing max.overlaps\n\n\n\n\n\n\n\n5 Customize Plot Themes\n\nggplotggthemehrbthems\n\n\nggplot2 comes with eight built-in themes, namely theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme_economist()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\nThemes:\n\ntheme_ft_rc()\ntheme_ipsum()\ntheme_ipsum_ps()\ntheme_ipsum_rc()\ntheme_ipsum_tw()\ntheme_modern_rc()\n\ntheme_ipsum() where ‘ipsum’ is Latin for ’precise.\n\n\n\n\n\n\nWarning\n\n\n\nError in theme_ipsum() : could not find function “theme_ipsum”\nEither Arial Narrow or Roboto Condensed fonts are required to use these themes.\nPlease use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\nWhy Arial Narrow?\nArial Narrow is generally installed by default or readily available on any modern system. Also, it is a condensed font with solid default kerning pairs and geometric numbers.\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\",\n                 fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18, base_size argument is used to increase the default axis label to 15, and grid argument is used to remove the x-axis grid lines.\n\n\n\n\n\n6 Create Composite Graphics\n\npatchwork (multiple graphs)gridExtra (multiple graphs)patchwork (insert)\n\n\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n“+” operator creates a horizontal layout. “()” create a subplot group. “|” operator to stack two ggplot2 graphs, “/” operator to place the plots beside each other, “()” operator the define the sequence of the plotting.\n\nmaths &lt;- ggplot(data = exam_data,\n                aes(x = MATHS, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nenglish &lt;- ggplot(data = exam_data,\n                aes(x = ENGLISH, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"English Score Distribution\", x = \"English Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nscience &lt;- ggplot(data = exam_data,\n                aes(x = SCIENCE, fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Science Score Distribution\", x = \"Science Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nenglish + maths + science\n\n\n\n\n\n(english + maths) / science\n\n\n\n\n\n\n\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\ngrid.arrange(english, maths, science, ncol = 2)\n\n\n\n\n\n\n\nmain &lt;- ggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              size = 0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English and Maths Scores using Scatterplot\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nmain + \n  inset_element(maths, left = 0.02, bottom = 0.7, right = 0.4, top = 1) +\n  inset_element(english, left = 0.4, bottom = 0.7, right = 0.8, top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nplot &lt;- (english / maths) | main\nplot & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 320 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n7 References\n\nhrbrthemes: https://hrbrmstr.github.io/hrbrthemes/"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-1-to-4-creating-various-ggplot",
    "href": "Topics/HO1/HO1.html#layer-1-to-4-creating-various-ggplot",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 1 to 4: Creating various ggplot",
    "text": "Layer 1 to 4: Creating various ggplot\n\ngeom_barcoord_polargeom_dotplotgeom_histogramgeom_densitygeom_boxplotgeom_violingeom_pointgeom_smooth\n\n\nA barplot is used to display the relationship between a numeric and a categorical variable.\n\nggplot(data = exam_data, aes(x = CLASS))+\n         geom_bar(fill = \"lightgreen\")+\n         labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n         theme_minimal()+\n         theme(legend.position = \"none\",\n               panel.grid.major = element_blank(),\n               panel.grid.minor = element_blank(),\n               axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = GENDER))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Gender\", x = \"Gender\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = GENDER))+\n  geom_bar()+\n  labs(title = \"Distribution of Gender by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = RACE))+\n  geom_bar(fill = \"lightgreen\")+\n  labs(title = \"Distribution of Students by Race\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\nA pie chart is a circle divided into sectors that each represent a proportion of the whole. There is no specific geom to build piechart with ggplot2. The trick is to build a barplot and use coord_polar to make it circular.\n\nggplot(exam_data, aes(x = CLASS)) +\n  geom_bar() +\n  coord_polar()+\n  labs(title = \"Distribution of Students by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn the case of pie chart, the pie() function of Base R is a better alternative.\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nAttention\n\n\n\n\nBin width defaults to 1/30 of the range of the data. Pick better value with binwidth\nMisleading y axis. Turn off y-axis using scale_y_continuous() and change binwidth to 2.5\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(fill = \"lightgreen\",\n               dotsize = 0.5,\n               binwidth = 2.5)+\n  scale_y_continuous(NULL, breaks = NULL)+\n  labs(title = \"Maths Score Distribution\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\")+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: stat_bin() using bins = 30. Pick better value with binwidth.\n\n\nCreate 10 bins\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_histogram(colour = \"black\", fill = \"lightgreen\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: stat_bin() using bins = 10.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nThe performance of students between Female and Male is observed to be similar across all scores.\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = CLASS))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\nMajority of 3A and 3B students score 80-100 in Maths while 3G, 3H and 3I scoare below 50.\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density(colour = \"black\")+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = GENDER))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           colour = CLASS))+\n  geom_density()+\n  labs(title = \"Maths Score Distribution using Density Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nx or y as MATHS determines the orientation of the boxplot. In this case, the maths score is a continuous variable and will be placed on y-axis for ease of visualization.\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_boxplot(notch = TRUE)+\n  labs(title = \"Maths Score Distribution using Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\ngeom_violin requiries x and y input.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, colour = GENDER))+\n  geom_violin()+\n  labs(title = \"Maths Score Distribution using Violin Plot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER, fill = GENDER))+\n  geom_violin()+\n  geom_boxplot(width = 0.3, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = CLASS, fill = CLASS))+\n  geom_violin(width = 1)+\n  geom_boxplot(width = 0.2, notch = TRUE, colour = \"black\", fill = \"white\")+\n  labs(title = \"Maths Score Distribution using Violin plot and Boxplot\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8,\n              method = lm)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  geom_point(position = \"jitter\", size = 0.3)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-5-scale",
    "href": "Topics/HO1/HO1.html#layer-5-scale",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 5: Scale",
    "text": "Layer 5: Scale\nscale_colour_brewer() and scale_fill_brewer() provide sequential, diverging and qualitative colour schemes from ColorBrewer and particularly well suited to display discrete values on a map.\n\nggplot(data = exam_data,\n       aes(x = MATHS, \n           fill = GENDER))+\n  geom_histogram(colour = \"black\", bins = 10)+\n  labs(title = \"Maths Score Distribution using Histogram\", x = \"Maths Score\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  scale_fill_brewer(palette = \"Blues\")\n\n\n\n\n?scales::brewer_pal for more details"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-6-statistic-summary",
    "href": "Topics/HO1/HO1.html#layer-6-statistic-summary",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 6: Statistic Summary",
    "text": "Layer 6: Statistic Summary\nBoxplot shows median while stat_summary show mean.\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"median\",         \n               colour =\"aquamarine4\",        \n               size=4) \n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = GENDER))+\n  geom_boxplot()+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Gender\", y = \"Maths Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  geom_point(stat = \"summary\",\n             fun.y=\"mean\",\n             colour =\"aquamarine4\",\n             size=4) \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"aquamarine4\",\n: Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-7-facets",
    "href": "Topics/HO1/HO1.html#layer-7-facets",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 7: Facets",
    "text": "Layer 7: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap().\n\nfacet_gridfacet_wrap\n\n\nNote x is Maths score.\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_grid(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS, fill = CLASS))+\n  geom_histogram(bins = 20)+\n  facet_wrap(~CLASS)+\n  labs(title = \"Maths Score Distribution by Gender\", x = \"Maths_Score\", y = \"Count\")+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO1/HO1.html#layer-8-coordinates",
    "href": "Topics/HO1/HO1.html#layer-8-coordinates",
    "title": "Fundamentals of ggplot2",
    "section": "Layer 8: Coordinates",
    "text": "Layer 8: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot.\n\ncoord_cartesiancoord_flipcoord_fixedcoord_quickmap\n\n\ncoord_cartesian() limits on the coordinate system and performs a visual zoom.\nUsage: coord_cartesian(xlim = NULL, ylim = NULL, expand = TRUE, default = FALSE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_cartesian(xlim = c(80,100), ylim = c(80,100))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\ncoord_flip() flips the horizontal bar chart into vertical bar chart.\nUsage: coord_flip(xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(x = CLASS,\n           fill = RACE))+\n  geom_bar()+\n  labs(title = \"Distribution of Race by Class\", x = \"Class\", y = \"Count\")+\n  theme_minimal()+\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_flip()\n\n\n\n\n\n\ncoord_fixed is a fixed scale coordinate system forces a specified ratio between the physical representation of data units on the axes. The ratio represents the number of units on the y-axis equivalent to one unit on the x-axis.\nUsage: coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_fixed(ratio = 5)\n\n\n\n\n\n\ncoord_quickmap() is a quick approximation that does preserve straight lines.\nUseage: coord_quickmap(xlim = NULL, ylim = NULL, expand = TRUE, clip = “on”)\n\n\n\n\n\n\nNote\n\n\n\nThe package “mapproj” is required for coord_map()\ncoord_map() projects a portion of the earth, which is approximately spherical, onto a flat 2D plane using any projection defined by the mapproj package. Map projections do not, in general, preserve straight lines, so this requires considerable computation.\nBoth coord_map() and coord_quickmap() are superseded by coord_sf().\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS, x = ENGLISH))+\n  geom_point()+\n  geom_smooth(size = 0.8)+\n  labs(title = \"Maths and English Score Distribution using Scatterplot\", x = \"Maths Score\", y = \"English Score\")+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  coord_map()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "Exercises/TH1/TH1.html",
    "href": "Exercises/TH1/TH1.html",
    "title": "OECD PISA Global Education",
    "section": "",
    "text": "1. Learning Objectives\n\nBackgroundDataTask\n\n\nThe Organisation for Economic Co-operation and Development (OECD) Programme for International Student Assessment (PISA) is a global education survey conducted to examines what students know in mathematics, reading and science, how well students can solve complex problems, think critically and communicate effectively. This gives insights into how well education systems are preparing students for real life challenges and future success. It provides the most comprehensive and rigorous international assessment of student learning outcomes to date. Results from PISA indicate the quality and equity of learning outcomes attained around the world, and allow educators and policy makers to learn from the policies and practices applied in other countries.\nPISA 2022 reports the following:\n\nDescribes students’ performance in mathematics, reading and science;\nExamines gender differences in performance;\nInvestigates how performance relates to students’ socio-economic status and immigrant background;\nDescribes how the quality and equity of learning outcomes have evolved since previous PISA assessments.\n\nOECD education director, Andreas Schleicher, shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.”. Furthermore, the slogan “Every School a Good School” was popularised by Mr Heng Swee Keat when he was education minister from 2011 to 2015.\nThe general public, however, strongly belief that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families.\n\n\nSingapore participated for the first time in PISA in 2009. By comparing results internationally, policy makers and educators in Singapore can learn from other countries’ policies and practices.\nPISA is conducted every three years to assess the education systems worldwide through testing 15 year-old students in the subjects of mathematics, reading, and science.\nThe PISA 2022 database contains the full set of responses from individual students, school principals and parents. There are a total of five data files and their contents are as follows:\n\nStudent questionnaire data file (focus of this practice)\nSchool questionnaire data file\nTeacher questionnaire data file\nCognitive item data file\nQuestionnaire timing data file\n\nThese data files are in SAS and SPSS formats.\n\n\n\n\n\n\nWhy are 15-year-old students choosen for assessment?\n\n\n\nPISA measures student performance as the extent to which 15-year-old students near the end of their compulsory education have acquired the knowledge and skills that are essential for full participation in modern societies, particularly in the core domains of reading, mathematics, and science.\n\n\n\n\nUsing appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions, we will reveal the following in this practice:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\n\n\n\n\n\n2. Load Packages\nThe following R packages will be used:\n\nggiraph\nggrepel provides geoms to repel overlapping text labels\nggthemes provides themes, geoms, and scales\nhrbrthemes provides typography-centric themes and theme components\npatchwork prepares composite figures\nhaven read and write various data formats used by other statistical packages\ntidyverse support data science, analysis and communication task\nkableExtra\n\n\npacman::p_load(ggiraph, ggrepel, kableExtra, patchwork, ggthemes, hrbrthemes, haven, tidyverse) \n\n\n\n3. Import Data\nThe PISA 2022 database was released on December 5, 2022. For the purpose of this practice, the Student questionnaire data file will be used to fulfil the task.\nSource: PISA 2022 (data) and PISA 2022 Results Volume 1 (guide)\n\nstu_qqq &lt;- read_sas(\"data/STU_QQQ_SAS/cy08msp_stu_qqq.sas7bdat\")\n\nThe output shows 613,744 observations with 1,279 variables.\nFor relevance, we filter stu_qqq by the column country code (CNT) for SGP to obtain Singapore results.\n\nstu_qqq_SGP &lt;- stu_qqq %&gt;% \n  filter(CNT == \"SGP\")\n\nThe output shows 6,606 observations with 1,279 variables.\n\n\n\n\n\n\nSave Point\n\n\n\n\n\n\nwrite_rds(stu_qqq_SGP, \"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\n4. Explore Data\n\n\n\n\n\n\nLoad Point\n\n\n\n\n\n\nstu_qqq_SGP &lt;-read_rds(\"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\nCode\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n\n\n\n\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n\n\n\n\n\n\nSCH_table &lt;- stu_qqq_SGP %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(TOTAL_STUDENT = n())\n\nDT::datatable(SCH_table)\n\n\n\n\n\n\n‘70200150’ no such school ID\n\nmean(SCH_table$TOTAL_STUDENT)\n\n[1] 40.28049\n\n\n\nduplicate &lt;- stu_qqq_SGP %&gt;% \n  group_by(CNTSTUID) %&gt;% \n  filter(n() &gt; 1)\n\n\nsum(is.na(stu_qqq_SGP))\n\n[1] 4168500\n\n\n\n\nShow the code\nstu_qqq_SGP_perf &lt;- stu_qqq_SGP %&gt;%\n  group_by(CNT, CNTRYID, CNTSCHID, CNTSTUID) %&gt;%\n  summarise(MATH = round(mean(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                              PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH), 1),\n            READING = round(mean(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ,\n                                 PV6READ, PV7READ, PV8READ, PV9READ, PV10READ), 1),\n            SCIENCE = round(mean(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE,\n                                 PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), 1))\n\n\n`summarise()` has grouped output by 'CNT', 'CNTRYID', 'CNTSCHID'. You can\noverride using the `.groups` argument.\n\n\nShow the code\ntooltip_css &lt;- \"background-color: white; font-style: bold; color: black\"\n\nstu_qqq_SGP_perf$tooltip &lt;- c(paste0(\"School = \", stu_qqq_SGP_perf$CNTSCHID, \n                                     \"\\nStudent = \", stu_qqq_SGP_perf$CNTSTUID))\n\nplot1 &lt;- ggplot(data = stu_qqq_SGP_perf, \n                aes(x = MATH))+\n  geom_dotplot_interactive(aes(data_id = CNTSTUID, tooltip = stu_qqq_SGP_perf$tooltip),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\")+\n  geom_vline(aes(xintercept = 472))+\n  coord_cartesian(xlim = c(0,1000))+ \n  scale_y_continuous(limits = c(0,100))+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot2 &lt;- ggplot(data = stu_qqq_SGP_perf, \n                aes(x = READING))+\n  geom_dotplot_interactive(aes(data_id = CNTSTUID, tooltip = stu_qqq_SGP_perf$tooltip),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\")+\n  geom_vline(aes(xintercept = 476))+\n  coord_cartesian(xlim = c(0,1000))+ \n  scale_y_continuous(limits = c(0,100))+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot3 &lt;- ggplot(data = stu_qqq_SGP_perf, \n                aes(x = SCIENCE))+\n  geom_dotplot_interactive(aes(data_id = CNTSTUID, tooltip = stu_qqq_SGP_perf$tooltip),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\")+\n  geom_vline(aes(xintercept = 485))+\n  coord_cartesian(xlim = c(0,1000))+\n  scale_y_continuous(limits = c(0,100))+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ng &lt;- wrap_plots(list(plot1, plot2, plot3), ncol = 1)\n\ngirafe(ggobj = g,\n       # code = print(plot1 + plot2 + plot3), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_tooltip(css = tooltip_css),\n         opts_hover(css = \"fill: #ABEBC6;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Topics/IC1/IC1.html",
    "href": "Topics/IC1/IC1.html",
    "title": "Import of Statistical Data Formats",
    "section": "",
    "text": "1. Learning Objectives\nR is capable of reading data from most formats, such as csv, xlsx, or txt and include files created in other statistical packages, such as SAS, Stata, SPSS.\nR also has two native data formats - rdata (also known as rda) for multiple R objects and rds for a single R object. These formats are used when R objects are saved for later use.\n\nLoad various statistical data formats using haven package\nManage large dataset using .gitignore file and “#| eval: false”\n\n\n\n2. R Package: Haven\nHaven enables R to read and write various data formats used by other statistical packages by wrapping the ReadStat C library. Haven is part of the tidyverse and supports:\n\nSAS: read_sas() reads .sas7bdat and .sas7bcat files while read_xpt() reads SAS transport files and write_xpt() writes SAS transport files.\nSPSS: read_sav() reads .sav files and read_por() reads the older .por files. write_sav() writes .sav files.\nStata: read_dta() reads .dta files. write_dta() writes .dta files.\n\n\n\n3. Load Packages\nThe following R packages will be used in this topic:\n\ntidyverse is a family of R packages designed to support data science, analysis and communication task including creating static statistical graphs\nhaven import common statistical formats into R via the embedded ‘ReadStat’ C library\n\n\npacman::p_load(tidyverse, haven)\n\n\n\n4. Import Data\nThe Programme for International Student Assessment (PISA) is a global education survey conducted every three years to assess the education systems worldwide through testing 15 year-old students in the subjects of mathematics, reading, and science. The current dataset was released on December 5, 2022.\nSource: PISA 2022\nread_sas() imports the PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/STU_QQQ_SAS/cy08msp_stu_qqq.sas7bdat\")\n\nThe output shows 613,744 observations with 1,279 variables. The tibble dataframe contains descriptions for each variable, which is unavailable if read.sas() is used.\n\n\n\n\n\n\nNote\n\n\n\nTo manage work space and render speed, Prof Kam recommends to avoid loading data into Github or datasets not exceeding 100 MB. We add the following text, data/, to .gitignore file for the exclusion of data folder.\n\n\nFor relevance, we filter stu_qqq by the column country code (CNT) for SGP to obtain Singapore results.\n\nstu_qqq_SGP &lt;- stu_qqq %&gt;% \n  filter(CNT == \"SGP\")\n\nThe output shows 6,606 observations with 1,279 variables.\n\n\n\n\n\n\nSave Point\n\n\n\n\n\n\nwrite_rds(stu_qqq_SGP, \"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\n\n\n\n\nLoad Point\n\n\n\n\n\n\nstu_qqq_SGP &lt;-read_rds(\"data/stu_qqq_SGP.rds\")\n\n\n\n\n\n\n5. Explore Data\n\nstu_qqq$CNT &lt;- as.factor(stu_qqq$CNT)\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\nstu_qqq$CNTSCHID &lt;- as.character(stu_qqq$CNTSCHID)\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\nstu_qqq$CNTSTUID = as.factor(stu_qqq$CNTSTUID)\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\nduplicate &lt;- stu_qqq %&gt;% \n  group_by(CNTSTUID) %&gt;% \n  filter(n() &gt; 1)\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\n\nFrom the output, there is no observation in duplicate.\n\nSCH_table &lt;- stu_qqq %&gt;%\n  group_by(CNT) %&gt;%\n  summarise(TOTAL_SCH = n())\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\nDT::datatable(SCH_table)\n\nError in eval(expr, envir, enclos): object 'SCH_table' not found\n\n\nThere are 6606 schools in Singapore in PISA 2022.\n\nSTU_table &lt;- stu_qqq %&gt;%\n  group_by(CNT, CNTSCHID) %&gt;%\n  summarise(TOTAL_STU = n())\n\nError in eval(expr, envir, enclos): object 'stu_qqq' not found\n\nDT::datatable(STU_table)\n\nError in eval(expr, envir, enclos): object 'STU_table' not found\n\n\n\nhead(stu_qqq_SGP, n = 5)\n\n# A tibble: 5 × 1,279\n  CNT   CNTRYID CNTSCHID CNTSTUID CYC   NatCen STRATUM SUBNATIO REGION  OECD\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 SGP       702 70200052 70200001 08MS  070200 SGP01   7020000   70200     0\n2 SGP       702 70200134 70200002 08MS  070200 SGP01   7020000   70200     0\n3 SGP       702 70200112 70200003 08MS  070200 SGP01   7020000   70200     0\n4 SGP       702 70200004 70200004 08MS  070200 SGP01   7020000   70200     0\n5 SGP       702 70200152 70200005 08MS  070200 SGP01   7020000   70200     0\n# ℹ 1,269 more variables: ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;,\n#   LANGTEST_COG &lt;dbl&gt;, LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;,\n#   Option_ICTQ &lt;dbl&gt;, Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;,\n#   Option_UH &lt;dbl&gt;, BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;,\n#   ST003D03T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;,\n#   ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;, ST250D06JA &lt;chr&gt;,\n#   ST250D07JA &lt;chr&gt;, ST251Q01JA &lt;dbl&gt;, ST251Q02JA &lt;dbl&gt;, ST251Q03JA &lt;dbl&gt;, …\n\n\n\n\nReference\nHaven: https://haven.tidyverse.org/index.html"
  },
  {
    "objectID": "Topics/HO3/HO3.html",
    "href": "Topics/HO3/HO3.html",
    "title": "Interactive Data Visualization",
    "section": "",
    "text": "Create interactive data visualization using ggiraph, plotlyr, crosstalk"
  },
  {
    "objectID": "Topics/HO3/HO3.html#ggiraph",
    "href": "Topics/HO3/HO3.html#ggiraph",
    "title": "Interactive Data Visualization",
    "section": "ggiraph",
    "text": "ggiraph\nggiraph is is a tool that allows you to create dynamic ggplot graphs. It allows the addition of tooltips, hover effects and JavaScript actions to the graphics. The package also allows the selection of graphical elements when used in shiny applications.\nggiraph is an htmlwidget and a ggplot2 extension. The graphs are exported as SVG documents and special attributes are used on various elements.\n\n\n\n\n\n\nNote\n\n\n\nThe htmlwidgets package provides a framework for creating R bindings to JavaScript libraries. HTML Widgets can be: (1) used at the R console for data analysis just like conventional R plots, (2) embedded within R Markdown documents, (3) ncorporated into Shiny web applications.\n\n\nInteractive is made with ggplot geometries, legends and theme elements with three aesthetics:\n\ntooltip: Tooltips to be displayed when mouse is over elements\nonclick: JavaScript function to be executed when elements are clicked\ndata_id: ID associated with elements for hover and click actions\n\nUsage:\n\nProvide at least one of the aesthetics tooltip, data_id and onclick to create interactive elements.\nCall function girafe() with the ggplot object so that the graphic is translated as a web interactive graphics.\n\n\n\n\n\n\n\nNote\n\n\n\nWe can replace geom_point() by geom_point_interactive() geom_sf() by geom_sf_interactive()\n\n\n\ntooltiponclickdata_id\n\n\n\nplot1 &lt;- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot1,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Topics/HO3/HO3.html#tooltip",
    "href": "Topics/HO3/HO3.html#tooltip",
    "title": "Interactive Data Visualization",
    "section": "4.1 Tooltip",
    "text": "4.1 Tooltip\n\nTooltip (single attribute)Tooltip (multiple attributes)Tooltip (customization)Tooltip (statistics)\n\n\nTo plot an interactive statistical graph by using ggiraph package, - Create an ggplot object using ggplot() and geom_dotplot_interactive() - Indiate aes() to include an attribute tooltip = ID - Create an interactive svg object using girafe() to be displayed on an html page\n\n\nShow the code\nplot1 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(tooltip = ID),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot1,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\npaste0() concatenate strings or vectors, in this example, two attributes, namely ID and CLASS. Note the change in aes() to tooltip = exam_data$tooltip\n\n\nShow the code\nexam_data$tooltip &lt;- c(paste0(\"Name = \", exam_data$ID, \n                              \"\\n Class = \", exam_data$CLASS))\n\nplot2 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot2,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\nThe customization is indicated by tooltip_css below, which changes the background-colour to white and the font colour to black and font-style bold.\nopts_tooltip() within giraph() customize the tooltip rendering by add css declarations.\n\n\n\n\n\n\nUsage\n\n\n\nopts_tooltip( css = NULL, offx = 10, offy = 0, use_cursor_pos = TRUE, opacity = 0.9, use_fill = FALSE, use_stroke = FALSE, delay_mouseover = 200, delay_mouseout = 500, placement = c(“auto”, “doc”, “container”), zindex = 999 )\n\n\n\n\nShow the code\ntooltip_css &lt;- \"background-color: white; font-style: bold; color: black\"\n\nexam_data$tooltip &lt;- c(paste0(\"Name = \", exam_data$ID, \n                              \"\\n Class = \", exam_data$CLASS))\n\nplot2 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot2,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(opts_tooltip(css = tooltip_css))\n)\n\n\n\n\n\n\n\n\n\n\nShow the code\nexam_data$Average_Score &lt;- round(rowMeans(exam_data[, c(\"ENGLISH\", \"MATHS\", \"SCIENCE\")]),\n                                 digits = 2)\n\n# tooltip_css &lt;- \"background-color: white; font-style: bold; color: black\"\n\nexam_data$tooltip2 &lt;- paste0(\"Name = \", exam_data$ID, \n                            \"\\nClass = \", exam_data$CLASS,\n                            \"\\nEnglish = \", exam_data$ENGLISH,\n                            \"\\nMaths = \", exam_data$MATHS,\n                            \"\\nScience = \", exam_data$SCIENCE,\n                            \"\\nAverage Score = \", exam_data$Average_Score)\n\nplot3 &lt;- ggplot(data = exam_data, \n                aes(x = Average_Score))+\n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip2),\n                           stackgroups = TRUE, \n                           binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(\n  ggobj = plot3,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(opts_tooltip(css = tooltip_css))\n)\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe top student is Student036 from Class 3A!\n\n\n\n\nShow the code\ntooltip &lt;- function(y, ymax, accuracy = 0.01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\nplot4 &lt;- ggplot(data = exam_data, \n                   aes(x = RACE))+\n  stat_summary(aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),\n               fun.data = \"mean_se\", geom = GeomInteractiveCol, fill = \"lightblue\")+\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se, geom = \"errorbar\", width = 0.2, size = 0.2)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(ggobj = plot4,\n       width_svg = 6,\n       height_svg = 6*0.618,\n       options = list(opts_tooltip(css = tooltip_css)))"
  },
  {
    "objectID": "Topics/HO3/HO3.html#data_id",
    "href": "Topics/HO3/HO3.html#data_id",
    "title": "Interactive Data Visualization",
    "section": "4.2 Data_id",
    "text": "4.2 Data_id\n\ndata_iddata_id (customization)data_id with tooltip\n\n\nNote the change in aes() to data_id = CLASS.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\nShow the code\nplot5 &lt;- ggplot(data=exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(data_id = CLASS),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(                                  \n  ggobj = plot5,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nopts_tooltip(), opts_hover() and opts_hover_inv() customize the tooltip and data_id rendering by add css declarations.\n\n\n\n\n\n\nNote\n\n\n\nThe default value of the hover css is hover_css = “fill:orange;”. In this example, we will use fill: #ABEBC6;.\n\n\n\n\nShow the code\nplot6 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(data_id = CLASS),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+\n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(                                  \n  ggobj = plot6,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #ABEBC6;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nopts_hover() and opts_hover_inv() customize the data_id rendering by add css declarations.\n\n\nShow the code\ntooltip_css &lt;- \"background-color: white; font-style: bold; color: black\"\n\nexam_data$tooltip &lt;- c(paste0(\"Name = \", exam_data$ID, \n                              \"\\n Class = \", exam_data$CLASS))\n\nplot6 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip, data_id = CLASS),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+               \n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(                                  \n  ggobj = plot6,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(css = tooltip_css),\n    opts_hover(css = \"fill: #ABEBC6;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Topics/HO3/HO3.html#onclick",
    "href": "Topics/HO3/HO3.html#onclick",
    "title": "Interactive Data Visualization",
    "section": "4.3 Onclick",
    "text": "4.3 Onclick\nonclick of girafe provides hot link interactivity on the web. The web document link with a data object will be displayed on the web browser upon mouse click. Note the change in aes() to onclick = onclick where onclick is assigned with web document link.\nsprintf() print formatted strings where fmt is the format and x is the value to format.\n\n\nShow the code\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\nplot7 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(onclick = onclick),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+               \n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(                                  \n  ggobj = plot7,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Topics/HO3/HO3.html#coordinated-multiple-views",
    "href": "Topics/HO3/HO3.html#coordinated-multiple-views",
    "title": "Interactive Data Visualization",
    "section": "4.4 Coordinated Multiple Views",
    "text": "4.4 Coordinated Multiple Views\nCoordinated view refers to the visualization when a data point of one plot is selected, the corresponding data point ID on the second or associated data visualisations will be highlighted.\nThe following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork will be used inside girafe function to create the interactive coordinated multiple views.\n\n\n\nShow the code\nplot8 &lt;- ggplot(data = exam_data, \n                aes(x = ENGLISH))+\n  geom_dotplot_interactive(aes(data_id = ID, tooltip = exam_data$tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+  \n  coord_cartesian(xlim = c(0,100))+ \n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot9 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_dotplot_interactive(aes(data_id = ID, tooltip = exam_data$tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+  \n  coord_cartesian(xlim = c(0,100))+ \n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot10 &lt;- ggplot(data = exam_data, \n                aes(x = SCIENCE))+\n  geom_dotplot_interactive(aes(data_id = ID, tooltip = exam_data$tooltip),\n                           stackgroups = TRUE,\n                           binwidth = 1,\n                           method = \"histodot\")+  \n  coord_cartesian(xlim = c(0,100))+ \n  scale_y_continuous(NULL, breaks = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngirafe(code = print(plot8 + plot9 + plot10), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_tooltip(css = tooltip_css),\n         opts_hover(css = \"fill: #ABEBC6;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#how-did-singaporean-students-perform-in-maths-reading-and-science",
    "href": "Exercises/TH1/TH1.html#how-did-singaporean-students-perform-in-maths-reading-and-science",
    "title": "OECD PISA Global Education",
    "section": "5.1 How did Singaporean students perform in Maths, Reading and Science?",
    "text": "5.1 How did Singaporean students perform in Maths, Reading and Science?\n\nstu_qqq_SGP_perf &lt;- stu_qqq_SGP %&gt;%\n  group_by(CNT, CNTRYID, CNTSCHID, CNTSTUID, ST004D01T, ESCS) %&gt;%\n  summarise(MATH = round(mean(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                              PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH), 1),\n            READING = round(mean(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ,\n                                 PV6READ, PV7READ, PV8READ, PV9READ, PV10READ), 1),\n            SCIENCE = round(mean(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE,\n                                 PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), 1))\n\n\nglimpse(stu_qqq_SGP_perf)\n\nRows: 6,606\nColumns: 9\nGroups: CNT, CNTRYID, CNTSCHID, CNTSTUID, ST004D01T [6,606]\n$ CNT       &lt;chr&gt; \"SGP\", \"SGP\", \"SGP\", \"SGP\", \"SGP\", \"SGP\", \"SGP\", \"SGP\", \"SGP…\n$ CNTRYID   &lt;chr&gt; \"702\", \"702\", \"702\", \"702\", \"702\", \"702\", \"702\", \"702\", \"702…\n$ CNTSCHID  &lt;chr&gt; \"70200001\", \"70200001\", \"70200001\", \"70200001\", \"70200001\", …\n$ CNTSTUID  &lt;chr&gt; \"70200085\", \"70200211\", \"70200271\", \"70200307\", \"70200327\", …\n$ ST004D01T &lt;fct&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ ESCS      &lt;dbl&gt; 1.2485, 0.6114, 0.8463, 1.3575, 1.4269, -0.1876, 1.1207, 2.0…\n$ MATH      &lt;dbl&gt; 779.4, 666.4, 822.6, 755.6, 669.4, 640.7, 751.8, 780.5, 840.…\n$ READING   &lt;dbl&gt; 641.2, 663.4, 699.9, 693.0, 590.4, 593.8, 655.1, 703.2, 766.…\n$ SCIENCE   &lt;dbl&gt; 795.3, 671.9, 781.1, 750.4, 639.2, 596.6, 711.3, 702.6, 824.…\n\n\n\n\nShow the code\nstu_qqq_SGP_perf$MATH &lt;- as.integer(stu_qqq_SGP_perf$MATH)\nstu_qqq_SGP_perf$MATH &lt;- as.integer(stu_qqq_SGP_perf$READING)\nstu_qqq_SGP_perf$MATH &lt;- as.integer(stu_qqq_SGP_perf$SCIENCE)\n\n\n\n\nShow the code\nplot7 &lt;- ggplot(stu_qqq_SGP_perf, \n                aes(x = MATH, y = ST004D01T,\n                    fill = ST004D01T, colour = ST004D01T))+\n  geom_density_ridges(bandwidth = 7, alpha = 0.6)+\n  geom_vline(aes(xintercept = 472), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 500, y = 3,  \n           label = \"OECD Mean Maths Score = 472\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_vline(aes(xintercept = 575), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 1000, y = 3,  \n           label = \"SGP Mean Maths Score = 575\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_boxplot(colour = \"black\",\n               width = .20,\n               outlier.shape = NA,\n               alpha = 0.4)+\n  xlim(0,1000)+\n  labs(title = \"Mathematics\", x = NULL, y = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank())\n\nplot8 &lt;- ggplot(stu_qqq_SGP_perf, \n                aes(x = READING, y = ST004D01T,\n                    fill = ST004D01T, colour = ST004D01T))+\n  geom_density_ridges(bandwidth = 7, alpha = 0.6)+\n  geom_vline(aes(xintercept = 476), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 500, y = 3,  \n           label = \"OECD Mean Reading Score = 476\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_vline(aes(xintercept = 543), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 1000, y = 3,  \n           label = \"SGP Mean Reading Score = 543\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_boxplot(colour = \"black\",\n               width = .20,\n               outlier.shape = NA,\n               alpha = 0.4)+\n  xlim(0,1000)+\n  labs(title = \"Reading\", x = NULL, y = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank())\n\nplot9 &lt;- ggplot(stu_qqq_SGP_perf, \n                aes(x = SCIENCE, y = ST004D01T,\n                    fill = ST004D01T, colour = ST004D01T))+\n  geom_density_ridges(bandwidth = 7, alpha = 0.6)+\n  geom_vline(aes(xintercept = 485), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 500, y = 3,  \n           label = \"OECD Mean Science Score = 485\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_vline(aes(xintercept = 561), \n             colour = \"azure4\",\n             linetype = \"dashed\") +\n  annotate(geom = \"text\", x = 1000, y = 3,  \n           label = \"SGP Mean Maths Score = 561\",\n           vjust = -0.5,  \n           hjust = 1.2,\n           size = 3.5) +\n  geom_boxplot(colour = \"black\",\n               width = .20,\n               outlier.shape = NA,\n               alpha = 0.4)+\n  xlim(0,1000)+\n  labs(title = \"Science\", x = NULL, y = NULL)+\n  theme_minimal()+\n  theme(legend.position = \"none\")\n\nplot7 / plot8 / plot9"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#does-socio-economic-background-affect-singaporean-students-performance-in-maths-reading-and-science",
    "href": "Exercises/TH1/TH1.html#does-socio-economic-background-affect-singaporean-students-performance-in-maths-reading-and-science",
    "title": "OECD PISA Global Education",
    "section": "5.2 Does socio-economic background affect Singaporean students’ performance in Maths, Reading and Science?",
    "text": "5.2 Does socio-economic background affect Singaporean students’ performance in Maths, Reading and Science?\nPISA index of economic, social, and cultural status ESCS is a composite score that combines into a single score information from three components: parents’ highest level of education (PARED index1); parents’ highest occupational status (HISEI index1); and home possessions (HOMEPOS index1, which is a proxy for family wealth).\n\nplot10 &lt;- ggplot(data = stu_qqq_SGP_perf,\n                 aes(y = ESCS, x = MATH, \n                     fill = ST004D01T, colour = ST004D01T))+\n  geom_point(alpha = 0.3)+\n  geom_smooth(size = 0.8)+\n  labs(title = \"ESCS and MATH\", x = \"Maths\", y = \"Socio-economic Index (ESCS)\")+\n  theme_minimal()+\n  xlim(100,900)+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot11 &lt;- ggplot(data = stu_qqq_SGP_perf, \n                 aes(y = ESCS, x = READING, \n                     fill = ST004D01T, colour = ST004D01T))+\n  geom_point(alpha = 0.3)+\n  geom_smooth(size = 0.8)+\n  labs(title = \"ESCS and READING\", x = \"Reading\", y = NULL)+\n  theme_minimal()+\n  xlim(100,900)+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  theme(axis.text.y = element_blank())\n\nplot12 &lt;- ggplot(data = stu_qqq_SGP_perf,\n                 aes(y = ESCS, x = SCIENCE, \n                     fill = ST004D01T, colour = ST004D01T))+\n  geom_point(alpha = 0.3)+\n  geom_smooth(size = 0.8)+\n  labs(title = \"ESCS and SCIENCE\", x = \"Science\", y = NULL)+\n  theme_minimal()+\n  xlim(100,900)+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  theme(axis.text.y = element_blank())\n\nplot10 + plot11 + plot12"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#does-linguistic-background-affect-singaporean-students-performance-in-maths-reading-and-science",
    "href": "Exercises/TH1/TH1.html#does-linguistic-background-affect-singaporean-students-performance-in-maths-reading-and-science",
    "title": "OECD PISA Global Education",
    "section": "5.2 Does linguistic background affect Singaporean students’ performance in Maths, Reading and Science?",
    "text": "5.2 Does linguistic background affect Singaporean students’ performance in Maths, Reading and Science?"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#does-the-school-system-affect-singaporean-students-performance-in-maths-reading-and-science",
    "href": "Exercises/TH1/TH1.html#does-the-school-system-affect-singaporean-students-performance-in-maths-reading-and-science",
    "title": "OECD PISA Global Education",
    "section": "5.2 Does the school system affect Singaporean students’ performance in Maths, Reading and Science?",
    "text": "5.2 Does the school system affect Singaporean students’ performance in Maths, Reading and Science?"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#does-correlation-exist-between-the-weighted-likelihood-estimates-wles",
    "href": "Exercises/TH1/TH1.html#does-correlation-exist-between-the-weighted-likelihood-estimates-wles",
    "title": "OECD PISA Global Education",
    "section": "5.2 Does correlation exist between the weighted likelihood estimates (WLEs)?",
    "text": "5.2 Does correlation exist between the weighted likelihood estimates (WLEs)?\n\n\nShow the code\nstu_qqq_SGP_impute &lt;- stu_qqq_SGP %&gt;%\n  mutate_all(funs(ifelse(is.na(.), 0, .)))\n\nstu_qqq_SGP_impute$FAMSUP &lt;- as.double(stu_qqq_SGP_impute$FAMSUP)\nstu_qqq_SGP_impute$DISCLIM &lt;- as.double(stu_qqq_SGP_impute$DISCLIM)\nstu_qqq_SGP_impute$TEACHSUP&lt;- as.double(stu_qqq_SGP_impute$TEACHSUP)\nstu_qqq_SGP_impute$COGACRCO&lt;- as.double(stu_qqq_SGP_impute$COGACRCO)\nCOGACRCO\n\n\nError in eval(expr, envir, enclos): object 'COGACRCO' not found\n\n\n\nlibrary(corrplot)\n\nemotional_wellbeing = c(990:1001, 1005:1006)\n\n# stu_qqq_SGP_impute[, selected_columns] &lt;- lapply(stu_qqq_SGP_impute[, selected_columns], as.numeric)\n\nvars.cor = cor(stu_qqq_SGP_impute[, emotional_wellbeing],\n               use = \"complete.obs\")\ncorrplot.mixed(vars.cor,\n               lower = \"ellipse\", \n               upper = \"number\",\n               number.cex = 0.6,\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nlibrary(corrplot)\n\nschool_support = c(1007:1015)\n\n# stu_qqq_SGP_impute[, selected_columns] &lt;- lapply(stu_qqq_SGP_impute[, selected_columns], as.numeric)\n\nvars.cor = cor(stu_qqq_SGP_impute[, school_support],\n               use = \"complete.obs\")\ncorrplot.mixed(vars.cor,\n               lower = \"ellipse\", \n               upper = \"number\",\n               number.cex = 0.6,\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nlibrary(corrplot)\n\nfamily_support = c(1004, 1030:1039)\n\n# stu_qqq_SGP_impute[, selected_columns] &lt;- lapply(stu_qqq_SGP_impute[, selected_columns], as.numeric)\n\nvars.cor = cor(stu_qqq_SGP_impute[, family_support],\n               use = \"complete.obs\")\ncorrplot.mixed(vars.cor,\n               lower = \"ellipse\", \n               upper = \"number\",\n               number.cex = 0.6,\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nlibrary(corrplot)\n\ndigital_exposure = c(1050:1062, 1064)\n\n# stu_qqq_SGP_impute[, selected_columns] &lt;- lapply(stu_qqq_SGP_impute[, selected_columns], as.numeric)\n\nvars.cor = cor(stu_qqq_SGP_impute[, digital_exposure],\n               use = \"complete.obs\")\ncorrplot.mixed(vars.cor,\n               lower = \"ellipse\", \n               upper = \"number\",\n               number.cex = 0.6,\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nlibrary(corrplot)\n\nselected_columns = c(990:1001, 1005:1006,\n                     1007:1015,\n                     1004, 1030:1039,\n                     1050:1062, 1064)\n\n# stu_qqq_SGP_impute[, selected_columns] &lt;- lapply(stu_qqq_SGP_impute[, selected_columns], as.numeric)\n\nvars.cor = cor(stu_qqq_SGP_impute[, selected_columns],\n               use = \"complete.obs\")\ncorrplot.mixed(vars.cor,\n               lower = \"ellipse\", \n               upper = \"number\",\n               number.cex = 0.5,\n               tl.cex = 0.5,\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Topics/HO2/HO2.html#built-in-themes",
    "href": "Topics/HO2/HO2.html#built-in-themes",
    "title": "Extensions of ggplot2",
    "section": "built-in themes",
    "text": "built-in themes\n\nplot3 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"theme_light\")+\n  theme_light()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\nplot4 &lt;- ggplot(data = exam_data, \n                aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"theme_dark\")+\n  theme_dark()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))\n\ngridExtra::grid.arrange(plot3, plot4, ncol = 2)"
  },
  {
    "objectID": "Topics/HO2/HO2.html#ggtheme",
    "href": "Topics/HO2/HO2.html#ggtheme",
    "title": "Extensions of ggplot2",
    "section": "ggtheme",
    "text": "ggtheme\nggthemes provides ggplot2 themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n             boundary = 100,\n             color=\"black\",\n             fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme_economist()+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))"
  },
  {
    "objectID": "Topics/HO2/HO2.html#hrbthems",
    "href": "Topics/HO2/HO2.html#hrbthems",
    "title": "Extensions of ggplot2",
    "section": "hrbthems",
    "text": "hrbthems\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\nThemes:\n\ntheme_ft_rc()\ntheme_ipsum()\ntheme_ipsum_ps()\ntheme_ipsum_rc()\ntheme_ipsum_tw()\ntheme_modern_rc()\n\ntheme_ipsum() where ‘ipsum’ is Latin for ’precise.\n\n\n\n\n\n\nWarning\n\n\n\nError in theme_ipsum() : could not find function “theme_ipsum”\nEither Arial Narrow or Roboto Condensed fonts are required to use these themes.\nPlease use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\nWhy Arial Narrow?\nArial Narrow is generally installed by default or readily available on any modern system. Also, it is a condensed font with solid default kerning pairs and geometric numbers.\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS))+\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\",\n                 fill=\"lightgreen\")+\n  ggtitle(\"Distribution of Maths Score\")+\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.line = element_line(colour = \"grey\"))+\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18, base_size argument is used to increase the default axis label to 15, and grid argument is used to remove the x-axis grid lines. :::"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#data-table",
    "href": "Exercises/TH1/TH1.html#data-table",
    "title": "OECD PISA Global Education",
    "section": "4.1 Data Table",
    "text": "4.1 Data Table\nThere are 148 secondary schools under MOE and 24 international schools. The PISA 2022 dataset compiles the student assessment across 164 unique school ID, surveying an impressive 95% of local schools.\n\n\nShow the code\nSCH_table &lt;- stu_qqq_SGP %&gt;%\n  group_by(CNT, CNTRYID, CNTSCHID) %&gt;%\n  summarise(TOTAL_STUDENT = n())\n\nDT::datatable(SCH_table)\n\n\n\n\n\n\n\nThere is an average of* 40.2 students assessed per school, equivalent to the class size of a level, in Singapore context, Secondary 3.\n\n\nShow the code\nmean(SCH_table$TOTAL_STUDENT)\n\n\n[1] 40.28049\n\n\nWith 1,279 variables, we can find out\n\n\nCode\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n  C --&gt; N{Well-being}\n  N --&gt; O[Sense of Belonging \\n School Safety \\n Perseverance \\n Curiosity \\n Cooperation \\n Stress Resistance \\n Emotional Control]\n\n\n\n\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n  C --&gt; N{Well-being}\n  N --&gt; O[Sense of Belonging \\n School Safety \\n Perseverance \\n Curiosity \\n Cooperation \\n Stress Resistance \\n Emotional Control]\n\n\n\n\n\n‘70200150’ no such school ID\n\nsum(is.na(stu_qqq_SGP))\n\n[1] 4168500"
  },
  {
    "objectID": "Exercises/TH1/TH1.html#data-scheme",
    "href": "Exercises/TH1/TH1.html#data-scheme",
    "title": "OECD PISA Global Education",
    "section": "Data Scheme",
    "text": "Data Scheme\nWith 1,279 variables, we can find out\n\n\nCode\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n  C --&gt; N{Well-being}\n  N --&gt; O[Sense of Belonging \\n School Safety \\n Perseverance \\n Curiosity \\n Cooperation \\n Stress Resistance \\n Emotional Control]\n\n\n\n\nflowchart LR\n  A[Country Code] --&gt; B[School ID]\n  B --&gt; C[Student ID]\n  C --&gt; D{Student \\n Performance}\n  D --&gt; E[Maths]\n  E --&gt; H[Anxiety \\n Cognitive Activation \\n Exposure \\n Self-efficacy \\n Teacher Support]\n  D --&gt; F[Reading]\n  D --&gt; G[Science]\n  F --&gt; H\n  G --&gt; H\n  C --&gt; I{Education \\n System}\n  I --&gt; J[School Characteristics: \\n Grades \\n Classroom \\n Teacher]\n  I --&gt; K[Student Characteristics: \\n Attitude \\n Background \\n Behaviour]\n  C --&gt; L{Economic \\n Social \\n Cultural \\n Status}\n  L --&gt; M[Parents Highest Level of Education\\n Parents highest occupational status \\n Home Possessions]\n  C --&gt; N{Well-being}\n  N --&gt; O[Sense of Belonging \\n School Safety \\n Perseverance \\n Curiosity \\n Cooperation \\n Stress Resistance \\n Emotional Control]"
  },
  {
    "objectID": "Topics/HO3/HO3.html#plot_ly",
    "href": "Topics/HO3/HO3.html#plot_ly",
    "title": "Interactive Data Visualization",
    "section": "4.1 plot_ly()",
    "text": "4.1 plot_ly()\n\nBasic plotly (2 variables)Three variables\n\n\nEach dot represents a student and the associated english and math score is displayed on the interactive graph.\n\nplot_ly(data = exam_data, \n        x = ~MATHS, y = ~ENGLISH)\n\n\n\n\n\n\n\ncolor argument is mapped to a qualitative visual variable, in this example, RACE. This representation adds on a broad category to the visualization.\n\nplot_ly(data = exam_data, \n        x = ~MATHS, y = ~ENGLISH,\n        color = ~RACE)"
  },
  {
    "objectID": "Topics/HO3/HO3.html#ggplotly",
    "href": "Topics/HO3/HO3.html#ggplotly",
    "title": "Interactive Data Visualization",
    "section": "4.2 ggplotly()",
    "text": "4.2 ggplotly()\nRequires ggplot() and then using ggplotly()\n\nBasic ggplotlyMultiple ggplotly\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS, y = ENGLISH))+\n  geom_point(size=1)+\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n\nThe creation of a coordinated linked plot by using plotly involves three steps:\nhighlight_key() of plotly package is used as shared data. two scatterplots will be created by using ggplot2 functions. lastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Topics/HO3/HO3.html#data-table",
    "href": "Topics/HO3/HO3.html#data-table",
    "title": "Interactive Data Visualization",
    "section": "6.1 Data Table",
    "text": "6.1 Data Table\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Topics/HO3/HO3.html#linked-brushing",
    "href": "Topics/HO3/HO3.html#linked-brushing",
    "title": "Interactive Data Visualization",
    "section": "6.2 Linked Brushing",
    "text": "6.2 Linked Brushing\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Topics/HO4/HO4.html",
    "href": "Topics/HO4/HO4.html",
    "title": "Animated Data Visualization",
    "section": "",
    "text": "1. Learning Objectives\n\n\n2. Load Packages\n\n\n3. Import Data"
  }
]